There are a number of of data cleaning tasks that I would take in order
to analyze this data. 

For 1 - the date isn't in a human readable format (it's in epoch time). 
This is easily solvable in R by reformatting the column.
	
	amazonData$time <- as.Date.POSIXct(amazonData$time, origin = "1970-01-01")

For 2 - I had a hard time at first finding the userId I needed. As it 
turns out, there is a space in front of every username. This can be 
solved in R by removing the space:

	amazonData$userId <- gsub(pattern = " ", replacement = "", x = amazonData$userId)

For 3 - the helpfulness comes in many levels. I would find it useful to 
normalize this data. To do this in R, I split the string on the "/", 
converted the list into a data frame, named the columns, calculated the 
helpfulness score as a percentage, and added it all back to the original 
data frame.

	new_level <- strsplit(as.character(amazonData$helpfulness), "/")
	new_level <- ldply(new_level, rbind)
	names(new_level) <- c("num_times_helpful", "num_people_voting")
	new_level$num_times_helpful <- as.numeric(as.character(new_level$num_times_helpful))
	new_level$num_people_voting <- as.numeric(as.character(new_level$num_people_voting))
	amazonData$helpfulness1 <- new_level$num_times_helpful / new_level$num_people_voting
	amazonData <- cbind(amazonData, new_level)

This leads to two other, new problems - helpfulness scores that are not a 
number (NaN) due to dividing by 0 and others that are greater than 1. To 
deal with the NaN, I would make the decision to rate that a 0.

	amazonData$helpfulness1[is.nan(amazonData$helpfulness1)] <- 0

It is not as simple to deal with the others that are greater than 1. As far as 
I can tell, these scores come from people voting the same review as helpful more 
than once. In this dataset, there are only 6; because it isn't many and the scores 
aren't very much higher than 1, I'd just assign these scores of 1. 

	amazonData$helpfulness1[amazonData$helpfulness1 > 1] <- 1

For 4 - there are some people who rate the same product more than one time. 
To deal with this and keep things fair, I would average out the scores and 
helpfulness values in these cases.